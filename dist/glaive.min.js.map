{"version":3,"file":"glaive.min.js","sources":["../lib/isType.js","../lib/sleep.js","../lib/allot.js","../lib/error.js","../lib/moduleStatus.js","../src/Injector.js","../src/Module.js","../src/Decorator.js","../src/index.js"],"sourcesContent":["export default new Proxy(\n  {},\n  {\n    get: (target, name) => value => {\n      const type = value::Object.prototype.toString().slice(8, -1)\n      return type[0].toLowerCase() + type.slice(1) === name\n    },\n  },\n)\n","export default async time =>\n  await new Promise(resolve => {\n    if (!time) {\n      resolve(true)\n    } else {\n      setTimeout(() => resolve(true), time)\n    }\n  })\n","export const prefix = \"_\"\nexport default function(config = {}) {\n  Object.entries(config)\n    .filter(([key]) => key !== \"allotParams\" && key !== \"complete\")\n    .map(([key, value]) => {\n      this[`${prefix}${key}`] = value\n    })\n  return this\n}\n","export const ERROR = {\n  allotParams: `\\'allotParams\\' must be a function`,\n  boot: `\\`Injector failed to boot up \\``,\n  module: `\\'module\\' must be a function or class`,\n}\n\nconst error = new Proxy(\n  {},\n  {\n    get: (target, name) => value => {\n      return ERROR[name] || `${value} Error`\n    },\n  },\n)\n\nexport default new Proxy(\n  {},\n  {\n    get: (target, name) => value => {\n      throw new Error(error[name](value))\n    },\n  },\n)\n","export default new Proxy(\n  {},\n  {\n    get: (target, name) => {\n      return new Map(\n        [\"initial\", \"initialized\", \"booting\", \"ready\"].map(i => [i, i]),\n      ).get(name)\n    },\n  },\n)\n","import is from \"../lib/isType\"\nimport sleep from \"../lib/sleep\"\nimport allot, { prefix } from \"../lib/allot\"\nimport error from \"../lib/error\"\nimport moduleStatus from \"../lib/moduleStatus\"\n\nexport default (\n  TargetModule = class {\n    constructor() {}\n  },\n) => {\n  return class Injector extends TargetModule {\n    constructor(config = {}) {\n      super(config)\n      const { allotParams = this._allotParams } = config\n      if (is.function(allotParams)) {\n        ;this::allotParams(config)\n      } else {\n        error.allotParams()\n      }\n      this._modules = new Map()\n      this._queueModules = new Set()\n      this._loadModulesHistory = new Set()\n      this._bootstrap(config).then(this::this._complete)\n    }\n\n    _allotParams(config) {\n      return this::allot(config)\n    }\n\n    _complete({ done }) {\n      this.initiated = true\n      return is.function(done) && done(this.initiated)\n    }\n\n    _merge(modules) {\n      let dependenceMap = []\n      modules.forEach(({ injectors } = {}, moduleName) => {\n        const dependence = injectors.reduce((pre, { deps = [] }) => {\n          return [...new Set(pre.concat(deps))]\n        }, [])\n        dependenceMap.push({\n          moduleName,\n          dependence,\n        })\n      })\n      return dependenceMap\n    }\n\n    _queue(modules = [], list) {\n      let restModules = []\n      modules.map(({ moduleName, dependence = [] } = {}) => {\n        const isNoneDependence = dependence.length === 0\n        const rest = [...new Set(dependence.concat([...list]))].filter(\n          item => ![...list].includes(item),\n        )\n        const isDepended = rest.length === 0\n        if (isNoneDependence || isDepended) {\n          list.add(moduleName)\n        } else {\n          restModules.push({ moduleName, dependence })\n        }\n      })\n      if (restModules.length > 0) {\n        this._queue(restModules, list)\n      }\n    }\n\n    _initialize(preDistribute) {\n      const dependenceMap = this._merge(this._modules)\n      this._queue(dependenceMap, this._queueModules)\n      this._queueModules.forEach(moduleName => {\n        const { Module, parameters, moduleKey, injectors } = this._modules.get(\n          moduleName,\n        )\n        if(preDistribute){\n          const dependences = new Set(\n            injectors.reduce((prev,{deps=[]})=>{\n              return [...prev,...deps]\n            },[])\n          )\n          const dependenceModules = {}\n          dependences.forEach((name)=>{\n            const {moduleKey} = this._modules.get(name)\n            dependenceModules[moduleKey] = this[moduleKey]\n          })\n          Object.assign(parameters,dependenceModules)\n        }\n        this[moduleKey] = new Module(parameters)\n        this.mountParams(moduleKey)\n        this[moduleKey].__status = moduleStatus.initialized\n      })\n      ;this::this.distribute(dependenceMap)\n      return this\n    }\n\n    _insureUnique() {\n      const overloadModules = [...this._loadModulesHistory].slice(0, -1)\n      overloadModules.forEach((modules = []) =>\n        modules.forEach(({ key, module }) => {\n          const isRemove =\n            this._modules.get(module.prototype.constructor.name).moduleKey !==\n            key\n          if (!is.null(key) && !is.undefined(key) && isRemove) {\n            Reflect.deleteProperty(this, key)\n          }\n        }),\n      )\n    }\n\n    mountParams() {\n      return this\n    }\n\n    inject(modules, { preInject, preDistribute } = {}) {\n      preInject && this::preInject()\n      modules.map(\n        ({ module, deps = [], params = {}, key, before, after } = {}) => {\n          if (!is.function(module)) {\n            return error.module()\n          }\n          const moduleName = module.prototype.constructor.name\n          const { _key = moduleName, _injectors = [] } = module\n          const moduleKey = key || _key\n          const originModule = this._modules.get(moduleName)\n          const { parameters = params, injectors = _injectors } =\n            originModule || {}\n          let override = {}\n          if (originModule) {\n            override = {\n              parameters: params,\n              injectors: [..._injectors, { deps, before, after }],\n            }\n          }\n          this._modules.set(\n            moduleName,\n            Object.assign(\n              {\n                Module: module,\n                moduleKey: moduleKey[0].toLowerCase() + moduleKey.slice(1),\n                parameters: Object.assign(parameters, params),\n                injectors: [...injectors, { deps, before, after }],\n              },\n              override,\n            ),\n          )\n        },\n      )\n      this._loadModulesHistory.add(modules)\n      this._initialize(preDistribute)\n      return this\n    }\n\n    distribute(dependenceMap) {\n      dependenceMap.map(({ moduleName, dependence }) => {\n        dependence.map(name => {\n          const { moduleKey } = this._modules.get(moduleName)\n          const module = this._modules.get(name)\n          this[moduleKey][`${prefix}${module.moduleKey}`] = this[\n            module.moduleKey\n          ]\n        })\n      })\n      return this\n    }\n\n    async _bootstrap(config) {\n      await sleep()\n      this._insureUnique()\n      try {\n        let queueModules = [...this._queueModules]\n        while (queueModules.length > 0) {\n          const moduleName = queueModules.shift()\n          const { injectors, moduleKey } = this._modules.get(moduleName)\n          if (!this[moduleKey]) {\n            error.throw(moduleKey)\n            continue\n          }\n          const isAsync = is.asyncFunction(this[moduleKey].initialize)\n          const _injectors = [...injectors]\n          this[moduleKey].__status = moduleStatus.booting\n          let beforeInjectors = _injectors.filter(({ before }) => before)\n          while (beforeInjectors.length > 0) {\n            let unprocessed\n            const { before, deps } = beforeInjectors.shift()\n            const isAsyncAction = is.asyncFunction(before)\n            const args = deps.map(dep => this[this._modules.get(dep).moduleKey])\n            if (isAsyncAction) {\n              unprocessed = await before(...args, this[moduleKey])\n            } else {\n              unprocessed = before(...args, this[moduleKey])\n            }\n          }\n          if (isAsync) {\n            await this[moduleKey].initialize()\n          } else {\n            if (is.function(this[moduleKey].initialize)) {\n              this[moduleKey].initialize()\n            }\n          }\n          let afterInjectors = _injectors.filter(({ after }) => after)\n          while (afterInjectors.length > 0) {\n            let processed\n            const { after, deps } = afterInjectors.shift()\n            const isAsyncAction = is.asyncFunction(after)\n            const args = deps.map(dep => this[this._modules.get(dep).moduleKey])\n            if (isAsyncAction) {\n              processed = await after(...args, this[moduleKey])\n            } else {\n              processed = after(...args, this[moduleKey])\n            }\n          }\n          this[moduleKey].__status = moduleStatus.ready\n        }\n      } catch (e) {\n        console.log(e)\n        error.boot()\n      }\n      return config\n    }\n  }\n}\n","import is from \"../lib/isType\"\nimport allot from \"../lib/allot\"\nimport error from \"../lib/error\"\nimport moduleStatus from \"../lib/moduleStatus\"\n\nexport default class Module {\n  constructor(args) {\n    const isFunction = is.function(this._allotParams)\n    if (isFunction) {\n      this._allotParams(args)\n    } else {\n      error.allotParams()\n    }\n    this.__status = moduleStatus.initial\n  }\n\n  _allotParams(config) {\n    return this::allot(config)\n  }\n}\n","export default (dependencies = {}) => target => {\n  target._injectors = [...(target._injectors || []), dependencies]\n  if (dependencies.key) {\n    target._key = dependencies.key\n  }\n}\n\n// export const prefix = '$$'\n// export const allot = (target, key, descriptor) => {\n//   const method = descriptor.value\n//   const allotParams = function(config = {}) {\n//     Object.entries(config)\n//       .filter(([key]) => key !== 'allotParams' && key !== 'complete')\n//       .map(([key, value]) => {\n//         this[`${prefix}${key}`] = value\n//       })\n//   }\n//   descriptor.value = (...args) => {\n//     const [config] = args\n//     return target::allotParams(config)\n//   }\n//   return descriptor\n// }\n","import Injector from \"./Injector\"\nimport Module from \"./Module\"\nimport Decorator from \"./Decorator\"\n\nexport default {\n  Injector,\n  Module,\n  Decorator,\n}\n\nexport { Injector, Module, Decorator }\n"],"names":["Proxy","target","name","type","Object","prototype","toString","slice","toLowerCase","time","Promise","resolve","prefix","config","entries","filter","key","map","value","ERROR","error","Error","Map","i","get","TargetModule","allotParams","_this","_allotParams","is","function","_modules","_queueModules","Set","_loadModulesHistory","_bootstrap","then","_complete","allot","done","initiated","modules","dependenceMap","forEach","injectors","moduleName","dependence","reduce","pre","deps","concat","push","list","restModules","isNoneDependence","length","rest","includes","item","isDepended","add","_queue","preDistribute","_merge","_this2","Module","parameters","moduleKey","dependences","prev","dependenceModules","assign","mountParams","__status","moduleStatus","initialized","distribute","overloadModules","module","isRemove","_this3","constructor","null","undefined","deleteProperty","preInject","params","before","after","_key","_injectors","originModule","_this4","override","set","_initialize","_this5","sleep","_insureUnique","queueModules","shift","throw","isAsync","asyncFunction","initialize","booting","beforeInjectors","unprocessed","isAsyncAction","args","_this6","dep","afterInjectors","processed","ready","e","log","boot","isFunction","initial","dependencies"],"mappings":"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"}