{"version":3,"file":"glaive.min.js","sources":["../lib/isType.js","../lib/sleep.js","../lib/allot.js","../lib/error.js","../lib/moduleStatus.js","../src/Injector.js","../src/Module.js","../src/Decorator.js","../src/index.js"],"sourcesContent":["export default new Proxy(\n  {},\n  {\n    get: (target, name) => value => {\n      const type = value::Object.prototype.toString().slice(8, -1)\n      return type[0].toLowerCase() + type.slice(1) === name\n    },\n  },\n)\n","export default async time => await new Promise(resolve => {\n  if (!time) {\n    resolve(true)\n  } else {\n    setTimeout(() => resolve(true), time)\n  }\n})\n\n","export const prefix = \"_\"\nexport default function(config = {}) {\n  Object.entries(config)\n    .filter(([key]) => key !== \"allotParams\" && key !== \"complete\")\n    .map(([key, value]) => {\n      this[`${prefix}${key}`] = value\n    })\n  return this\n}\n","export const ERROR = {\n  allotParams: `\\'allotParams\\' must be a function`,\n  boot: `\\`Injector failed to boot up \\``,\n  module: `\\'module\\' must be a function or class`,\n}\n\nconst error = new Proxy({}, {\n  get: (target, name) => (value) => {\n    return ERROR[name] || `${value} Error`\n  }\n})\n\nexport default new Proxy({}, {\n  get: (target, name) => (value) => {\n    throw new Error(error[name](value))\n  }\n})\n","export default new Proxy({}, {\n  get: (target, name) => {\n    return new Map([\n      'initial',\n      'initialized',\n      'booting',\n      'ready',\n    ].map(i => [i, i])).get(name)\n  }\n})\n","import is from '../lib/isType'\nimport sleep from '../lib/sleep'\nimport allot, { prefix } from '../lib/allot'\nimport error from '../lib/error'\nimport moduleStatus from '../lib/moduleStatus'\n\nexport default class Injector {\n  constructor(config = {}) {\n    const {allotParams = this._allotParams} = config\n    if (is.function(allotParams)) {\n      this::allotParams(config)\n    } else {\n      error.allotParams()\n    }\n    this._modules = new Map()\n    this._queueModules = new Set()\n    this._loadModulesHistory = new Set()\n    this._bootstrap(config).then(this::this._complete)\n  }\n\n  _allotParams(config) {\n    return this::allot(config)\n  }\n\n  _complete({done}) {\n    this.initiated = true\n    return is.function(done) && done(this.initiated)\n  }\n\n  _merge(modules) {\n    let dependenceMap = []\n    modules.forEach(({injectors} = {}, moduleName) => {\n      const dependence = injectors.reduce((pre, {deps = []}) => {\n        return [...new Set(pre.concat(deps))]\n      }, [])\n      dependenceMap.push({\n        moduleName,\n        dependence,\n      })\n    })\n    return dependenceMap\n  }\n\n  _queue(modules = [], list) {\n    let restModules = []\n    modules.map(({moduleName, dependence = []} = {}) => {\n      const isNoneDependence = dependence.length === 0\n      const rest = [...new Set(dependence.concat([...list]))].filter(\n        item => ![...list].includes(item),\n      )\n      const isDepended = rest.length === 0\n      if (isNoneDependence || isDepended) {\n        list.add(moduleName)\n      } else {\n        restModules.push({moduleName, dependence})\n      }\n    })\n    if (restModules.length > 0) {\n      this._queue(restModules, list)\n    }\n  }\n\n  _initialize() {\n    const dependenceMap = this._merge(this._modules)\n    this._queue(dependenceMap, this._queueModules)\n    this._queueModules.forEach(moduleName => {\n      const {Module, parameters, moduleKey} = this._modules.get(moduleName)\n      this[moduleKey] = new Module(parameters)\n      this[moduleKey].__status = moduleStatus.initialized\n    })\n    this::this.distribute(dependenceMap)\n    return this\n  }\n\n  _insureUnique() {\n    const overloadModules = [...this._loadModulesHistory].slice(0, -1)\n    overloadModules.forEach(\n      (modules = []) => modules.forEach(\n        ({key, module}) => {\n          const isRemove = this._modules.get(module.prototype.constructor.name).moduleKey !== key\n          if (!is.null(key) && !is.undefined(key) && isRemove) {\n            Reflect.deleteProperty(this, key)\n          }\n        }\n      )\n    )\n  }\n\n  async _bootstrap(config) {\n    await sleep()\n    this._insureUnique()\n    try {\n      let queueModules = [...this._queueModules]\n      while (queueModules.length > 0) {\n        const moduleName = queueModules.shift()\n        const {injectors, moduleKey} = this._modules.get(moduleName)\n        if(!this[moduleKey]){\n          error.throw(moduleKey)\n          continue\n        }\n        const isAsync = is.asyncFunction(this[moduleKey].initialize)\n        const _injectors = [...injectors]\n        let beforeInjectors = _injectors.filter(({before}) => before)\n        this[moduleKey].__status = moduleStatus.booting\n        while (beforeInjectors.length > 0) {\n          let unprocessed\n          const {before, deps} = beforeInjectors.shift()\n          const isAsyncAction = is.asyncFunction(before)\n          const args = deps.map(dep => this[this._modules.get(dep).moduleKey])\n          if (isAsyncAction) {\n            unprocessed = await before(...args, this[moduleKey])\n          } else {\n            unprocessed = before(...args, this[moduleKey])\n          }\n        }\n        if (isAsync) {\n          await this[moduleKey].initialize()\n        } else {\n          if (is.function(this[moduleKey].initialize)) {\n            this[moduleKey].initialize()\n          }\n        }\n        let afterInjectors = _injectors.filter(({after}) => after)\n        while (afterInjectors.length > 0) {\n          let processed\n          const {after, deps} = afterInjectors.shift()\n          const isAsyncAction = is.asyncFunction(after)\n          const args = deps.map(dep => this[this._modules.get(dep).moduleKey])\n          if (isAsyncAction) {\n            processed = await after(...args, this[moduleKey])\n          } else {\n            processed = after(...args, this[moduleKey])\n          }\n        }\n        this[moduleKey].__status = moduleStatus.ready\n      }\n    } catch (e) {\n      console.log(e)\n      error.boot()\n    }\n    return config\n  }\n\n  inject(models) {\n    models.map(({module, deps = [], params = {}, key, before, after} = {}) => {\n      if (!is.function(module)) {\n        return error.module()\n      }\n      const moduleName = module.prototype.constructor.name\n      const {_key = moduleName, _injectors = []} = module\n      const moduleKey = key || _key\n      const originModule = this._modules.get(moduleName)\n      const {parameters = params, injectors = _injectors} = originModule || {}\n      let override = {}\n      if (originModule) {\n        override = {\n          parameters: params,\n          injectors: [..._injectors, {deps, before, after}],\n        }\n      }\n      this._modules.set(moduleName, Object.assign({\n        Module: module,\n        moduleKey,\n        parameters: Object.assign(parameters, params),\n        injectors: [...injectors, {deps, before, after}],\n      }, override))\n    })\n    this._loadModulesHistory.add(models)\n    this._initialize()\n    return this\n  }\n\n  distribute(dependenceMap) {\n    dependenceMap.map(({moduleName, dependence}) => {\n      dependence.map(name => {\n        const {moduleKey} = this._modules.get(moduleName)\n        const module = this._modules.get(name)\n        this[moduleKey][`${prefix}${module.moduleKey}`] = this[moduleKey]\n      })\n    })\n    return this\n  }\n}\n","import is from \"../lib/isType\"\nimport allot from \"../lib/allot\"\nimport error from \"../lib/error\"\nimport moduleStatus from \"../lib/moduleStatus\"\n\nexport default class Module {\n  constructor(args) {\n    const isFunction = is.function(this._allotParams)\n    if (isFunction) {\n      this._allotParams(args)\n    } else {\n      error.allotParams()\n    }\n    this.__status = moduleStatus.initial\n  }\n\n  _allotParams(config) {\n    return this::allot(config)\n  }\n}\n","export default (dependencies = {}) => target => {\n  target._injectors = [...(target._injectors || []), dependencies]\n  if (dependencies.key) {\n    target._key = dependencies.key\n  }\n}\n\n// export const prefix = '$$'\n// export const allot = (target, key, descriptor) => {\n//   const method = descriptor.value\n//   const allotParams = function(config = {}) {\n//     Object.entries(config)\n//       .filter(([key]) => key !== 'allotParams' && key !== 'complete')\n//       .map(([key, value]) => {\n//         this[`${prefix}${key}`] = value\n//       })\n//   }\n//   descriptor.value = (...args) => {\n//     const [config] = args\n//     return target::allotParams(config)\n//   }\n//   return descriptor\n// }\n","import Injector from \"./Injector\"\nimport Module from \"./Module\"\nimport Decorator from \"./Decorator\"\n\nexport default {\n  Injector,\n  Module,\n  Decorator,\n}\n\nexport { Injector, Module, Decorator }\n"],"names":["Proxy","target","name","type","Object","prototype","toString","slice","toLowerCase","time","Promise","resolve","prefix","config","entries","filter","key","map","value","ERROR","error","Error","Map","i","get","Injector","allotParams","_allotParams","is","function","_modules","_queueModules","Set","_loadModulesHistory","_bootstrap","then","_complete","allot","done","initiated","modules","dependenceMap","forEach","injectors","moduleName","dependence","reduce","pre","deps","concat","push","list","restModules","isNoneDependence","length","rest","includes","item","isDepended","add","_queue","_merge","_this","Module","parameters","moduleKey","__status","moduleStatus","initialized","distribute","overloadModules","module","isRemove","_this2","constructor","null","undefined","deleteProperty","sleep","_insureUnique","queueModules","shift","throw","isAsync","asyncFunction","initialize","_injectors","beforeInjectors","before","booting","unprocessed","isAsyncAction","args","_this3","dep","afterInjectors","after","processed","ready","e","log","boot","models","params","_key","originModule","_this4","override","set","assign","_initialize","_this5","isFunction","initial","dependencies"],"mappings":"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"}