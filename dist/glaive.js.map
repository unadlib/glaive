{"version":3,"file":"glaive.js","sources":["../lib/isType.js","../lib/sleep.js","../lib/allot.js","../lib/error.js","../lib/moduleStatus.js","../src/Injector.js","../src/Module.js","../src/Decorator.js","../src/index.js"],"sourcesContent":["export default new Proxy(\n  {},\n  {\n    get: (target, name) => value => {\n      const type = value::Object.prototype.toString().slice(8, -1)\n      return type[0].toLowerCase() + type.slice(1) === name\n    },\n  },\n)\n","export default async time =>\n  await new Promise(resolve => {\n    if (!time) {\n      resolve(true)\n    } else {\n      setTimeout(() => resolve(true), time)\n    }\n  })\n","export const prefix = \"_\"\nexport default function(config = {}) {\n  Object.entries(config)\n    .filter(([key]) => key !== \"allotParams\" && key !== \"complete\")\n    .map(([key, value]) => {\n      this[`${prefix}${key}`] = value\n    })\n  return this\n}\n","export const ERROR = {\n  allotParams: `\\'allotParams\\' must be a function`,\n  boot: `\\`Injector failed to boot up \\``,\n  module: `\\'module\\' must be a function or class`,\n}\n\nconst error = new Proxy(\n  {},\n  {\n    get: (target, name) => value => {\n      return ERROR[name] || `${value} Error`\n    },\n  },\n)\n\nexport default new Proxy(\n  {},\n  {\n    get: (target, name) => value => {\n      throw new Error(error[name](value))\n    },\n  },\n)\n","export default new Proxy(\n  {},\n  {\n    get: (target, name) => {\n      return new Map(\n        [\"initial\", \"initialized\", \"booting\", \"ready\"].map(i => [i, i]),\n      ).get(name)\n    },\n  },\n)\n","import is from '../lib/isType'\nimport sleep from '../lib/sleep'\nimport allot, { prefix } from '../lib/allot'\nimport error from '../lib/error'\nimport moduleStatus from '../lib/moduleStatus'\n\nexport default (TargetModule = class {constructor() {}}) => {\n  return class Injector extends TargetModule {\n    constructor(config = {}) {\n      super(config)\n      const {allotParams = this._allotParams} = config\n      if (is.function(allotParams)) {\n        this::allotParams(config)\n      } else {\n        error.allotParams()\n      }\n      this._modules = new Map()\n      this._queueModules = new Set()\n      this._loadModulesHistory = new Set()\n      this._bootstrap(config).then(this::this._complete)\n    }\n\n    _allotParams(config) {\n      return this::allot(config)\n    }\n\n    _complete({done}) {\n      this.initiated = true\n      return is.function(done) && done(this.initiated)\n    }\n\n    _merge(modules) {\n      let dependenceMap = []\n      modules.forEach(({injectors} = {}, moduleName) => {\n        const dependence = injectors.reduce((pre, {deps = []}) => {\n          return [...new Set(pre.concat(deps))]\n        }, [])\n        dependenceMap.push({\n          moduleName,\n          dependence,\n        })\n      })\n      return dependenceMap\n    }\n\n    _queue(modules = [], list) {\n      let restModules = []\n      modules.map(({moduleName, dependence = []} = {}) => {\n        const isNoneDependence = dependence.length === 0\n        const rest = [...new Set(dependence.concat([...list]))].filter(\n          item => ![...list].includes(item),\n        )\n        const isDepended = rest.length === 0\n        if (isNoneDependence || isDepended) {\n          list.add(moduleName)\n        } else {\n          restModules.push({moduleName, dependence})\n        }\n      })\n      if (restModules.length > 0) {\n        this._queue(restModules, list)\n      }\n    }\n\n    _initialize() {\n      const dependenceMap = this._merge(this._modules)\n      this._queue(dependenceMap, this._queueModules)\n      this._queueModules.forEach(moduleName => {\n        const {Module, parameters, moduleKey, injectors} = this._modules.get(moduleName)\n        // const dependences = new Set(\n        //   injectors.reduce((prev,{deps=[]})=>{\n        //     return [...prev,...deps]\n        //   },[])\n        // )\n        // const dependenceModules = {}\n        // dependences.forEach((name)=>{\n        //   const {moduleKey} = this._modules.get(name)\n        //   dependenceModules[moduleKey] = this[moduleKey]\n        // })\n        // this[moduleKey] = new Module({...parameters,...dependenceModules})\n        this[moduleKey] = new Module(parameters)\n        this.mountParams(moduleKey)\n        this[moduleKey].__status = moduleStatus.initialized\n      })\n      this::this.distribute(dependenceMap)\n      return this\n    }\n\n    _insureUnique() {\n      const overloadModules = [...this._loadModulesHistory].slice(0, -1)\n      overloadModules.forEach((modules = []) =>\n        modules.forEach(({key, module}) => {\n          const isRemove =\n            this._modules.get(module.prototype.constructor.name).moduleKey !== key\n          if (!is.null(key) && !is.undefined(key) && isRemove) {\n            Reflect.deleteProperty(this, key)\n          }\n        }),\n      )\n    }\n\n    mountParams() {\n      return this\n    }\n\n    inject(modules, {preInject} = {}) {\n      preInject && this::preInject()\n      modules.map(\n        ({module, deps = [], params = {}, key, before, after} = {}) => {\n          if (!is.function(module)) {\n            return error.module()\n          }\n          const moduleName = module.prototype.constructor.name\n          const {_key = moduleName, _injectors = []} = module\n          const moduleKey = key || _key\n          const originModule = this._modules.get(moduleName)\n          const {parameters = params, injectors = _injectors} =\n          originModule || {}\n          let override = {}\n          if (originModule) {\n            override = {\n              parameters: params,\n              injectors: [..._injectors, {deps, before, after}],\n            }\n          }\n          this._modules.set(\n            moduleName,\n            Object.assign(\n              {\n                Module: module,\n                moduleKey: moduleKey[0].toLowerCase() + moduleKey.slice(1),\n                parameters: Object.assign(parameters, params),\n                injectors: [...injectors, {deps, before, after}],\n              },\n              override,\n            ),\n          )\n        },\n      )\n      this._loadModulesHistory.add(modules)\n      this._initialize()\n      return this\n    }\n\n    distribute(dependenceMap) {\n      dependenceMap.map(({moduleName, dependence}) => {\n        dependence.map(name => {\n          const {moduleKey} = this._modules.get(moduleName)\n          const module = this._modules.get(name)\n          this[moduleKey][`${prefix}${module.moduleKey}`] = this[module.moduleKey]\n        })\n      })\n      return this\n    }\n\n    async _bootstrap(config) {\n      await sleep()\n      this._insureUnique()\n      try {\n        let queueModules = [...this._queueModules]\n        while (queueModules.length > 0) {\n          const moduleName = queueModules.shift()\n          const {injectors, moduleKey} = this._modules.get(moduleName)\n          if (!this[moduleKey]) {\n            error.throw(moduleKey)\n            continue\n          }\n          const isAsync = is.asyncFunction(this[moduleKey].initialize)\n          const _injectors = [...injectors]\n          this[moduleKey].__status = moduleStatus.booting\n          let beforeInjectors = _injectors.filter(({before}) => before)\n          while (beforeInjectors.length > 0) {\n            let unprocessed\n            const {before, deps} = beforeInjectors.shift()\n            const isAsyncAction = is.asyncFunction(before)\n            const args = deps.map(dep => this[this._modules.get(dep).moduleKey])\n            if (isAsyncAction) {\n              unprocessed = await before(...args, this[moduleKey])\n            } else {\n              unprocessed = before(...args, this[moduleKey])\n            }\n          }\n          if (isAsync) {\n            await this[moduleKey].initialize()\n          } else {\n            if (is.function(this[moduleKey].initialize)) {\n              this[moduleKey].initialize()\n            }\n          }\n          let afterInjectors = _injectors.filter(({after}) => after)\n          while (afterInjectors.length > 0) {\n            let processed\n            const {after, deps} = afterInjectors.shift()\n            const isAsyncAction = is.asyncFunction(after)\n            const args = deps.map(dep => this[this._modules.get(dep).moduleKey])\n            if (isAsyncAction) {\n              processed = await after(...args, this[moduleKey])\n            } else {\n              processed = after(...args, this[moduleKey])\n            }\n          }\n          this[moduleKey].__status = moduleStatus.ready\n        }\n      } catch (e) {\n        console.log(e)\n        error.boot()\n      }\n      return config\n    }\n\n  }\n}\n","import is from \"../lib/isType\"\nimport allot from \"../lib/allot\"\nimport error from \"../lib/error\"\nimport moduleStatus from \"../lib/moduleStatus\"\n\nexport default class Module {\n  constructor(args) {\n    const isFunction = is.function(this._allotParams)\n    if (isFunction) {\n      this._allotParams(args)\n    } else {\n      error.allotParams()\n    }\n    this.__status = moduleStatus.initial\n  }\n\n  _allotParams(config) {\n    return this::allot(config)\n  }\n}\n","export default (dependencies = {}) => target => {\n  target._injectors = [...(target._injectors || []), dependencies]\n  if (dependencies.key) {\n    target._key = dependencies.key\n  }\n}\n\n// export const prefix = '$$'\n// export const allot = (target, key, descriptor) => {\n//   const method = descriptor.value\n//   const allotParams = function(config = {}) {\n//     Object.entries(config)\n//       .filter(([key]) => key !== 'allotParams' && key !== 'complete')\n//       .map(([key, value]) => {\n//         this[`${prefix}${key}`] = value\n//       })\n//   }\n//   descriptor.value = (...args) => {\n//     const [config] = args\n//     return target::allotParams(config)\n//   }\n//   return descriptor\n// }\n","import Injector from \"./Injector\"\nimport Module from \"./Module\"\nimport Decorator from \"./Decorator\"\n\nexport default {\n  Injector,\n  Module,\n  Decorator,\n}\n\nexport { Injector, Module, Decorator }\n"],"names":["Proxy","target","name","type","Object","prototype","toString","slice","toLowerCase","time","Promise","resolve","prefix","config","entries","filter","key","map","value","ERROR","error","Error","Map","i","get","TargetModule","allotParams","_allotParams","is","function","_modules","_queueModules","Set","_loadModulesHistory","_bootstrap","then","_complete","allot","done","initiated","modules","dependenceMap","forEach","injectors","moduleName","dependence","reduce","pre","deps","concat","push","list","restModules","isNoneDependence","length","rest","includes","item","isDepended","add","_queue","_merge","Module","parameters","moduleKey","mountParams","__status","moduleStatus","initialized","distribute","overloadModules","module","isRemove","constructor","null","undefined","deleteProperty","preInject","params","before","after","_key","_injectors","originModule","override","set","assign","_initialize","sleep","_insureUnique","queueModules","shift","throw","isAsync","asyncFunction","initialize","booting","beforeInjectors","unprocessed","isAsyncAction","args","dep","afterInjectors","processed","ready","e","log","boot","isFunction","initial","dependencies"],"mappings":"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"}