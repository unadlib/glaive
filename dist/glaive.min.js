!(function(a, b) {
  typeof exports === "object" && typeof module !== "undefined"
    ? b(exports)
    : typeof define === "function" && define.amd
      ? define(["exports"], b)
      : b((a.glaive = {}))
})(this, function(a) {
  "use strict"
  var b = new Proxy(
      {},
      {
        get: function c(a, b) {
          return function(a) {
            return Object.prototype.toString.call(a) === "[object " + b + "]"
          }
        },
      },
    ),
    d = function(a, b) {
      if (!(a instanceof b)) {
        throw new TypeError("Cannot call a class as a function")
      }
    },
    e = (function() {
      function a(a, b) {
        for (var c = 0; c < b.length; c++) {
          var d = b[c]
          d.enumerable = d.enumerable || !1
          d.configurable = !0
          "value" in d && (d.writable = !0)
          Object.defineProperty(a, d.key, d)
        }
      }
      return function(b, c, d) {
        c && a(b.prototype, c)
        d && a(b, d)
        return b
      }
    })(),
    f = function(a) {
      if (Array.isArray(a)) {
        for (var b = 0, c = Array(a.length); b < a.length; b++) c[b] = a[b]
        return c
      } else {
        return Array.from(a)
      }
    },
    g = (function() {
      function a(b, c) {
        d(this, a)
        this._config = b
        this._callback = c
        this._modules = []
        this._module = {}
        this.initialize()
        this.bootstrap().then(this._complete.bind(this))
      }
      e(a, [
        {
          key: "_complete",
          value: function a() {
            this._callback && this._callback(this)
            this.initiated = !0
            return this
          },
        },
        {
          key: "_queue",
          value: function c(a, b) {
            var d = []
            a.map(function(a) {
              var c = a.moduleName,
                e = a.dependence,
                g = e === undefined ? [] : e,
                h = g.length === 0,
                i = [].concat(f(new Set(g.concat(b)))).filter(function(a) {
                  return !b.includes(a)
                }),
                j = i.length === 0
              h || j ? b.push(c) : d.push({ moduleName: c, dependence: g })
            })
            d.length > 0 && this._queue(d, b)
          },
        },
        {
          key: "_filter",
          value: function d(a, b, c) {
            return b
              .map(function(b, c) {
                return { moduleName: b, module: a[c] }
              })
              .filter(function(a) {
                var b = a.moduleName
                return c.includes(b)
              })
              .map(function(a) {
                var b = a.module
                return b
              })
          },
        },
        {
          key: "initialize",
          value: function a() {
            throw new Error(
              "Please set initialization Dependency Injection configuration.",
            )
          },
        },
        {
          key: "inject",
          value: function c(a) {
            var d = this,
              e =
                arguments.length > 1 && arguments[1] !== undefined
                  ? arguments[1]
                  : [],
              g = arguments[2],
              h = a.name,
              i = a._dependencies || [],
              j = [].concat(f(new Set(i.concat(e)))),
              k = async function c() {
                for (var h = arguments.length, k = Array(h), l = 0; l < h; l++)
                  k[l] = arguments[l]
                var m = b.AsyncFunction(a._callback) || b.Promise(a._callback),
                  n = b.AsyncFunction(g) || b.Promise(g),
                  o =
                    b.AsyncFunction(a.prototype.initialize) ||
                    b.Promise(a.prototype.initialize),
                  p = void 0
                m
                  ? await a._callback.apply(a, f(d._filter(k, j, i)))
                  : a._callback && a._callback.apply(a, f(d._filter(k, j, i)))
                o
                  ? (p = await new Promise(function(b) {
                      return new a({ initCallback: b })
                    }))
                  : (p = new a())
                d.injector(p, j, k)
                n
                  ? await g.apply(undefined, f(d._filter(k, j, e)).concat([p]))
                  : g && g.apply(undefined, f(d._filter(k, j, e)).concat([p]))
                return p
              }
            this._modules.push({ moduleName: h, dependence: j, initialize: k })
            this._module[h] = a
            return this
          },
        },
        {
          key: "injector",
          value: function d(a, b, c) {
            b.map(function(b, d) {
              a["_" + b.toLocaleLowerCase()] = c[d]
            })
          },
        },
        {
          key: "bootstrap",
          value: async function a() {
            var c = this,
              d = []
            this._queue(this._modules, d)
            for (var e = 0; e < d.length; e++) {
              for (var g = 0; g < this._modules.length; g++) {
                var h = d[e],
                  i = this._modules[g],
                  j = i.moduleName === h,
                  k = i.dependence.map(function(a) {
                    return c[a]
                  })
                if (j) {
                  var l =
                    b.AsyncFunction(i.initialize) || b.Promise(i.initialize)
                  l
                    ? (this[h] = await i.initialize.apply(i, f(k)))
                    : (this[h] = i.initialize.apply(i, f(k)))
                }
              }
            }
            return this
          },
        },
      ])
      return a
    })(),
    h = (function() {
      function a() {
        d(this, a)
        this.initialize.apply(this, arguments)
      }
      e(a, [
        {
          key: "initialize",
          value: function a() {
            var b =
                arguments.length > 0 && arguments[0] !== undefined
                  ? arguments[0]
                  : {},
              c = b.initCallBack,
              d = c === undefined ? function() {} : c,
              e = d || this._initCallBack
            if (typeof d !== "function") {
              throw new Error('"initCallBack" must be a function')
            }
            return e(this)
          },
        },
        {
          key: "_initCallBack",
          value: function a() {
            return this
          },
        },
      ])
      return a
    })(),
    i = function a() {
      var b =
          arguments.length > 0 && arguments[0] !== undefined
            ? arguments[0]
            : [],
        c = arguments[1]
      return function(a) {
        a._dependencies = b
        a._callback = c
      }
    },
    j = { DI: g, Module: h, depend: i }
  a["default"] = j
  a.DI = g
  a.Module = h
  a.depend = i
  Object.defineProperty(a, "__esModule", { value: !0 })
})
//# sourceMappingURL=glaive.min.js.map
