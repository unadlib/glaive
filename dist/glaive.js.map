{"version":3,"file":"glaive.js","sources":["../lib/isType.js","../lib/sleep.js","../lib/allot.js","../lib/error.js","../lib/moduleStatus.js","../src/Injector.js","../src/Module.js","../src/Decorator.js","../src/index.js"],"sourcesContent":["export default new Proxy(\n  {},\n  {\n    get: (target, name) => value => {\n      const type = value::Object.prototype.toString().slice(8, -1)\n      return type[0].toLowerCase() + type.slice(1) === name\n    },\n  },\n)\n","export default async time => await new Promise(resolve => {\n  if (!time) {\n    resolve(true)\n  } else {\n    setTimeout(() => resolve(true), time)\n  }\n})\n\n","export const prefix = \"_\"\nexport default function(config = {}) {\n  Object.entries(config)\n    .filter(([key]) => key !== \"allotParams\" && key !== \"complete\")\n    .map(([key, value]) => {\n      this[`${prefix}${key}`] = value\n    })\n  return this\n}\n","export const ERROR = {\n  allotParams: `\\'allotParams\\' must be a function`,\n  boot: `\\`Injector failed to boot up \\``,\n  module: `\\'module\\' must be a function or class`,\n}\n\nconst error = new Proxy({}, {\n  get: (target, name) => (value) => {\n    return ERROR[name] || `${value} Error`\n  }\n})\n\nexport default new Proxy({}, {\n  get: (target, name) => (value) => {\n    throw new Error(error[name](value))\n  }\n})\n","export default new Proxy({}, {\n  get: (target, name) => {\n    return new Map([\n      'initial',\n      'initialized',\n      'booting',\n      'ready',\n    ].map(i => [i, i])).get(name)\n  }\n})\n","import is from '../lib/isType'\nimport sleep from '../lib/sleep'\nimport allot, { prefix } from '../lib/allot'\nimport error from '../lib/error'\nimport moduleStatus from '../lib/moduleStatus'\n\nexport default class Injector {\n  constructor(config = {}) {\n    const {allotParams = this._allotParams} = config\n    if (is.function(allotParams)) {\n      this::allotParams(config)\n    } else {\n      error.allotParams()\n    }\n    this._modules = new Map()\n    this._queueModules = new Set()\n    this._loadModulesHistory = new Set()\n    this._bootstrap(config).then(this::this._complete)\n  }\n\n  _allotParams(config) {\n    return this::allot(config)\n  }\n\n  _complete({done}) {\n    this.initiated = true\n    return is.function(done) && done(this.initiated)\n  }\n\n  _merge(modules) {\n    let dependenceMap = []\n    modules.forEach(({injectors} = {}, moduleName) => {\n      const dependence = injectors.reduce((pre, {deps = []}) => {\n        return [...new Set(pre.concat(deps))]\n      }, [])\n      dependenceMap.push({\n        moduleName,\n        dependence,\n      })\n    })\n    return dependenceMap\n  }\n\n  _queue(modules = [], list) {\n    let restModules = []\n    modules.map(({moduleName, dependence = []} = {}) => {\n      const isNoneDependence = dependence.length === 0\n      const rest = [...new Set(dependence.concat([...list]))].filter(\n        item => ![...list].includes(item),\n      )\n      const isDepended = rest.length === 0\n      if (isNoneDependence || isDepended) {\n        list.add(moduleName)\n      } else {\n        restModules.push({moduleName, dependence})\n      }\n    })\n    if (restModules.length > 0) {\n      this._queue(restModules, list)\n    }\n  }\n\n  _initialize() {\n    const dependenceMap = this._merge(this._modules)\n    this._queue(dependenceMap, this._queueModules)\n    this._queueModules.forEach(moduleName => {\n      const {Module, parameters, moduleKey} = this._modules.get(moduleName)\n      this[moduleKey] = new Module(parameters)\n      this[moduleKey].__status = moduleStatus.initialized\n    })\n    this::this.distribute(dependenceMap)\n    return this\n  }\n\n  _insureUnique() {\n    const overloadModules = [...this._loadModulesHistory].slice(0, -1)\n    overloadModules.forEach(\n      (modules = []) => modules.forEach(\n        ({key, module}) => {\n          const isRemove = this._modules.get(module.prototype.constructor.name).moduleKey !== key\n          if (!is.null(key) && !is.undefined(key) && isRemove) {\n            Reflect.deleteProperty(this, key)\n          }\n        }\n      )\n    )\n  }\n\n  async _bootstrap(config) {\n    await sleep()\n    this._insureUnique()\n    try {\n      let queueModules = [...this._queueModules]\n      while (queueModules.length > 0) {\n        const moduleName = queueModules.shift()\n        const {injectors, moduleKey} = this._modules.get(moduleName)\n        if(!this[moduleKey]){\n          error.throw(moduleKey)\n          continue\n        }\n        const isAsync = is.asyncFunction(this[moduleKey].initialize)\n        const _injectors = [...injectors]\n        let beforeInjectors = _injectors.filter(({before}) => before)\n        this[moduleKey].__status = moduleStatus.booting\n        while (beforeInjectors.length > 0) {\n          let unprocessed\n          const {before, deps} = beforeInjectors.shift()\n          const isAsyncAction = is.asyncFunction(before)\n          const args = deps.map(dep => this[this._modules.get(dep).moduleKey])\n          if (isAsyncAction) {\n            unprocessed = await before(...args, this[moduleKey])\n          } else {\n            unprocessed = before(...args, this[moduleKey])\n          }\n        }\n        if (isAsync) {\n          await this[moduleKey].initialize()\n        } else {\n          if (is.function(this[moduleKey].initialize)) {\n            this[moduleKey].initialize()\n          }\n        }\n        let afterInjectors = _injectors.filter(({after}) => after)\n        while (afterInjectors.length > 0) {\n          let processed\n          const {after, deps} = afterInjectors.shift()\n          const isAsyncAction = is.asyncFunction(after)\n          const args = deps.map(dep => this[this._modules.get(dep).moduleKey])\n          if (isAsyncAction) {\n            processed = await after(...args, this[moduleKey])\n          } else {\n            processed = after(...args, this[moduleKey])\n          }\n        }\n        this[moduleKey].__status = moduleStatus.ready\n      }\n    } catch (e) {\n      console.log(e)\n      error.boot()\n    }\n    return config\n  }\n\n  inject(models) {\n    models.map(({module, deps = [], params = {}, key, before, after} = {}) => {\n      if (!is.function(module)) {\n        return error.module()\n      }\n      const moduleName = module.prototype.constructor.name\n      const {_key = moduleName, _injectors = []} = module\n      const moduleKey = key || _key\n      const originModule = this._modules.get(moduleName)\n      const {parameters = params, injectors = _injectors} = originModule || {}\n      let override = {}\n      if (originModule) {\n        override = {\n          parameters: params,\n          injectors: [..._injectors, {deps, before, after}],\n        }\n      }\n      this._modules.set(moduleName, Object.assign({\n        Module: module,\n        moduleKey,\n        parameters: Object.assign(parameters, params),\n        injectors: [...injectors, {deps, before, after}],\n      }, override))\n    })\n    this._loadModulesHistory.add(models)\n    this._initialize()\n    return this\n  }\n\n  distribute(dependenceMap) {\n    dependenceMap.map(({moduleName, dependence}) => {\n      dependence.map(name => {\n        const {moduleKey} = this._modules.get(moduleName)\n        const module = this._modules.get(name)\n        this[moduleKey][`${prefix}${module.moduleKey}`] = this[moduleKey]\n      })\n    })\n    return this\n  }\n}\n","import is from \"../lib/isType\"\nimport allot from \"../lib/allot\"\nimport error from \"../lib/error\"\nimport moduleStatus from \"../lib/moduleStatus\"\n\nexport default class Module {\n  constructor(args) {\n    const isFunction = is.function(this._allotParams)\n    if (isFunction) {\n      this._allotParams(args)\n    } else {\n      error.allotParams()\n    }\n    this.__status = moduleStatus.initial\n  }\n\n  _allotParams(config) {\n    return this::allot(config)\n  }\n}\n","export default (dependencies = {}) => target => {\n  target._injectors = [...(target._injectors || []), dependencies]\n  if (dependencies.key) {\n    target._key = dependencies.key\n  }\n}\n\n// export const prefix = '$$'\n// export const allot = (target, key, descriptor) => {\n//   const method = descriptor.value\n//   const allotParams = function(config = {}) {\n//     Object.entries(config)\n//       .filter(([key]) => key !== 'allotParams' && key !== 'complete')\n//       .map(([key, value]) => {\n//         this[`${prefix}${key}`] = value\n//       })\n//   }\n//   descriptor.value = (...args) => {\n//     const [config] = args\n//     return target::allotParams(config)\n//   }\n//   return descriptor\n// }\n","import Injector from \"./Injector\"\nimport Module from \"./Module\"\nimport Decorator from \"./Decorator\"\n\nexport default {\n  Injector,\n  Module,\n  Decorator,\n}\n\nexport { Injector, Module, Decorator }\n"],"names":["Proxy","target","name","type","Object","prototype","toString","slice","toLowerCase","time","Promise","resolve","prefix","config","entries","filter","key","map","value","ERROR","error","Error","Map","i","get","Injector","allotParams","_allotParams","is","function","_modules","_queueModules","Set","_loadModulesHistory","_bootstrap","then","_complete","allot","done","initiated","modules","dependenceMap","forEach","injectors","moduleName","dependence","reduce","pre","deps","concat","push","list","restModules","isNoneDependence","length","rest","includes","item","isDepended","add","_queue","_merge","Module","parameters","moduleKey","__status","moduleStatus","initialized","distribute","overloadModules","module","isRemove","constructor","null","undefined","deleteProperty","sleep","_insureUnique","queueModules","shift","throw","isAsync","asyncFunction","initialize","_injectors","beforeInjectors","before","booting","unprocessed","isAsyncAction","args","dep","afterInjectors","after","processed","ready","e","log","boot","models","params","_key","originModule","override","set","assign","_initialize","isFunction","initial","dependencies"],"mappings":"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"}